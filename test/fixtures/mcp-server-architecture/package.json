{
  "name": "containerization-assist-mcp",
  "version": "2.0.0",
  "description": "Containerization Assist MCP Server - Complete Architecture",
  "type": "module",
  "main": "dist/index.js",
  "scripts": {
    "start": "node dist/index.js",
    "build": "tsc",
    "test": "NODE_OPTIONS='--experimental-vm-modules' jest",
    "test:unit": "NODE_OPTIONS='--experimental-vm-modules' jest test/unit",
    "test:integration": "NODE_OPTIONS='--experimental-vm-modules' jest test/integration",
    "test:coverage": "NODE_OPTIONS='--experimental-vm-modules' jest --coverage",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "typecheck": "tsc --noEmit",
    "dev": "nodemon --exec node --loader ts-node/esm src/index.ts"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.0.0",
    "pino": "^8.17.0",
    "pino-pretty": "^10.3.1",
    "zod": "^3.22.4",
    "events": "^3.3.0"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/node": "24.3.1",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "mcp",
    "containerization",
    "docker",
    "kubernetes",
    "ai",
    "mcp-server-architecture"
  ],
  "author": "Containerization Assist Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/example/containerization-assist-mcp"
  },
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "testEnvironment": "node",
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    }
  },
  "mcpServerArchitecture": {
    "components": {
      "types": "Type system implemented",
      "infrastructure": "Infrastructure layer implemented",
      "service": "Service layer implemented",
      "testing": "Testing framework implemented"
    },
    "status": "complete"
  }
}
